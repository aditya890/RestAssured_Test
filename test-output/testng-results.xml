<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="20" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="40098" started-at="2020-05-10T05:34:59Z" finished-at="2020-05-10T05:35:39Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="40098" started-at="2020-05-10T05:34:59Z" finished-at="2020-05-10T05:35:39Z">
      <class name="com.demo.RestDemo">
        <test-method status="PASS" signature="getResponse()[pri:0, instance:com.demo.RestDemo@604ed9f0]" name="getResponse" duration-ms="1479" started-at="2020-05-10T11:05:16Z" finished-at="2020-05-10T11:05:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponse -->
      </class> <!-- com.demo.RestDemo -->
      <class name="com.demo.UploadFileRest">
        <test-method status="FAIL" signature="doingPaymentWithOauth2Autentication()[pri:1, instance:com.demo.UploadFileRest@1e88b3c]" name="doingPaymentWithOauth2Autentication" duration-ms="1579" started-at="2020-05-10T11:05:26Z" finished-at="2020-05-10T11:05:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.demo.UploadFileRest.doingPaymentWithOauth2Autentication(UploadFileRest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doingPaymentWithOauth2Autentication -->
      </class> <!-- com.demo.UploadFileRest -->
      <class name="com.demo.Oauth2_Test2">
        <test-method status="PASS" signature="getAccessTokenViaPreemptiveAuthentication()[pri:1, instance:com.demo.Oauth2_Test2@77caeb3e]" name="getAccessTokenViaPreemptiveAuthentication" duration-ms="3158" started-at="2020-05-10T11:05:17Z" finished-at="2020-05-10T11:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccessTokenViaPreemptiveAuthentication -->
      </class> <!-- com.demo.Oauth2_Test2 -->
      <class name="com.demo.QueryParam_Test">
        <test-method status="PASS" signature="queryTest()[pri:0, instance:com.demo.QueryParam_Test@3bfdc050]" name="queryTest" duration-ms="1098" started-at="2020-05-10T11:05:15Z" finished-at="2020-05-10T11:05:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryTest -->
      </class> <!-- com.demo.QueryParam_Test -->
      <class name="com.demo.RestCurdTestNg">
        <test-method status="PASS" signature="create()[pri:1, instance:com.demo.RestCurdTestNg@42d80b78]" name="create" duration-ms="1361" started-at="2020-05-10T11:05:21Z" finished-at="2020-05-10T11:05:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method status="FAIL" signature="update()[pri:2, instance:com.demo.RestCurdTestNg@42d80b78]" name="update" duration-ms="1567" started-at="2020-05-10T11:05:30Z" finished-at="2020-05-10T11:05:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at com.demo.RestCurdTestNg.update(RestCurdTestNg.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
        <test-method status="PASS" signature="get()[pri:3, instance:com.demo.RestCurdTestNg@42d80b78]" name="get" duration-ms="1467" started-at="2020-05-10T11:05:36Z" finished-at="2020-05-10T11:05:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get -->
        <test-method status="PASS" signature="delete()[pri:4, instance:com.demo.RestCurdTestNg@42d80b78]" name="delete" duration-ms="1435" started-at="2020-05-10T11:05:37Z" finished-at="2020-05-10T11:05:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- com.demo.RestCurdTestNg -->
      <class name="com.demo.RestPathParam">
        <test-method status="PASS" signature="create()[pri:1, instance:com.demo.RestPathParam@91161c7]" name="create" duration-ms="1429" started-at="2020-05-10T11:05:23Z" finished-at="2020-05-10T11:05:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method status="PASS" signature="get()[pri:2, instance:com.demo.RestPathParam@91161c7]" name="get" duration-ms="1694" started-at="2020-05-10T11:05:33Z" finished-at="2020-05-10T11:05:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get -->
      </class> <!-- com.demo.RestPathParam -->
      <class name="com.demo.Deserialization_Cmlx_Rspns">
        <test-method status="PASS" signature="create()[pri:1, instance:com.demo.Deserialization_Cmlx_Rspns@1bce4f0a]" name="create" duration-ms="1527" started-at="2020-05-10T11:05:22Z" finished-at="2020-05-10T11:05:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
      </class> <!-- com.demo.Deserialization_Cmlx_Rspns -->
      <class name="com.demo.RestAssured_Log">
        <test-method status="PASS" signature="create()[pri:1, instance:com.demo.RestAssured_Log@6a4f787b]" name="create" duration-ms="1345" started-at="2020-05-10T11:05:25Z" finished-at="2020-05-10T11:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method status="PASS" signature="get()[pri:2, instance:com.demo.RestAssured_Log@6a4f787b]" name="get" duration-ms="1414" started-at="2020-05-10T11:05:34Z" finished-at="2020-05-10T11:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get -->
      </class> <!-- com.demo.RestAssured_Log -->
      <class name="com.demo.OAuth2_Test">
        <test-method status="PASS" signature="getAccessTokenViaPreemptiveAuthentication()[pri:1, instance:com.demo.OAuth2_Test@5e3a8624]" name="getAccessTokenViaPreemptiveAuthentication" duration-ms="1720" started-at="2020-05-10T11:05:28Z" finished-at="2020-05-10T11:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAccessTokenViaPreemptiveAuthentication -->
        <test-method status="PASS" signature="doingPaymentWithOauth2Autentication()[pri:2, instance:com.demo.OAuth2_Test@5e3a8624]" name="doingPaymentWithOauth2Autentication" duration-ms="1651" started-at="2020-05-10T11:05:31Z" finished-at="2020-05-10T11:05:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doingPaymentWithOauth2Autentication -->
      </class> <!-- com.demo.OAuth2_Test -->
      <class name="com.demo.DataProvider_Rest">
        <test-method status="PASS" signature="createPetWithData(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, java.lang.String)[pri:0, instance:com.demo.DataProvider_Rest@5c3bd550]" name="createPetWithData" duration-ms="2648" started-at="2020-05-10T11:05:07Z" data-provider="dpGetWithParam" finished-at="2020-05-10T11:05:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[jerry]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.ust.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[www.pst.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[resting]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPetWithData -->
        <test-method status="PASS" signature="createPetWithData(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, java.lang.String)[pri:0, instance:com.demo.DataProvider_Rest@5c3bd550]" name="createPetWithData" duration-ms="1410" started-at="2020-05-10T11:05:10Z" data-provider="dpGetWithParam" finished-at="2020-05-10T11:05:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tomy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[jerry]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.ust.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[www.pst.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[resting]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPetWithData -->
      </class> <!-- com.demo.DataProvider_Rest -->
      <class name="com.demo.BasicAuthentication">
        <test-method status="PASS" signature="basicAuthenticaion()[pri:0, instance:com.demo.BasicAuthentication@47c62251]" name="basicAuthenticaion" duration-ms="8495" started-at="2020-05-10T11:04:59Z" finished-at="2020-05-10T11:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basicAuthenticaion -->
      </class> <!-- com.demo.BasicAuthentication -->
      <class name="com.demo.JsonSchemaValidation">
        <test-method status="PASS" signature="createPetWithData(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, java.lang.String)[pri:0, instance:com.demo.JsonSchemaValidation@685cb137]" name="createPetWithData" duration-ms="1995" started-at="2020-05-10T11:05:11Z" data-provider="dpGetWithParam" finished-at="2020-05-10T11:05:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tom]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[jerry]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.ust.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[www.pst.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[resting]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPetWithData -->
        <test-method status="PASS" signature="createPetWithData(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int, java.lang.String, java.lang.String)[pri:0, instance:com.demo.JsonSchemaValidation@685cb137]" name="createPetWithData" duration-ms="1471" started-at="2020-05-10T11:05:13Z" data-provider="dpGetWithParam" finished-at="2020-05-10T11:05:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[tomy]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[jerry]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[www.google.com]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[www.ust.com]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[www.pst.com]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[testing]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[resting]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[available]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPetWithData -->
      </class> <!-- com.demo.JsonSchemaValidation -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
